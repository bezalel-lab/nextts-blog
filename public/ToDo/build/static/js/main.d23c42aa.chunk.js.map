{"version":3,"sources":["components/Todo.js","components/FilterButton.js","components/Form.js","App.js","index.js"],"names":["Todo","props","useState","isEditing","setEditing","newName","setNewName","editFieldRef","useRef","editButtonRef","wasEditing","value","ref","useEffect","current","usePrevious","editingTemplate","className","onSubmit","e","preventDefault","editTask","id","htmlFor","name","type","onChange","target","onClick","viewTemplate","defaultChecked","completed","toggleTaskCompleted","deleteTask","focus","FilterButton","aria-pressed","isPressed","setFilter","Form","setName","trim","addTask","autoComplete","FILTER_MAP","All","Active","task","Completed","FILTER_NAMES","Object","keys","App","tasks","setTasks","filter","editedTaskList","map","updatedTasks","remainingTasks","taskList","filterList","tasksNoun","length","headingText","listHeadingRef","prevTaskLength","newTask","nanoid","tabIndex","role","aria-labelledby","ReactDOM","render","document","getElementById"],"mappings":"yNAUe,SAASA,EAAKC,GAAQ,IAAD,EACAC,oBAAS,GADT,mBACzBC,EADyB,KACdC,EADc,OAEFF,mBAAS,IAFP,mBAEzBG,EAFyB,KAEhBC,EAFgB,KAG1BC,EAAeC,iBAAO,MACtBC,EAAgBD,iBAAO,MAEvBE,EAdV,SAAqBC,GACjB,IAAMC,EAAMJ,mBAIZ,OAHAK,qBAAU,WACND,EAAIE,QAAUH,KAEXC,EAAIE,QASQC,CAAYZ,GAa/B,IAAMa,EACF,uBAAMC,UAAU,cAAcC,SARlC,SAAsBC,GAClBA,EAAEC,iBACFnB,EAAMoB,SAASpB,EAAMqB,GAAIjB,GACzBC,EAAW,IACXF,GAAW,IAIX,UACI,sBAAKa,UAAU,aAAf,UACI,wBAAOA,UAAU,aAAaM,QAAStB,EAAMqB,GAA7C,0BACkBrB,EAAMuB,QAExB,uBACIF,GAAIrB,EAAMqB,GACVL,UAAU,YACVQ,KAAK,OACLd,MAAON,EACPqB,SAtBhB,SAAsBP,GAClBb,EAAWa,EAAEQ,OAAOhB,QAsBRC,IAAKL,OAGb,sBAAKU,UAAU,YAAf,UACI,yBAAQQ,KAAK,SAASR,UAAU,kBAAkBW,QAAS,kBAAMxB,GAAW,IAA5E,mBACU,uBAAMa,UAAU,kBAAhB,sBAA4ChB,EAAMuB,WAE5D,yBAAQC,KAAK,SAASR,UAAU,6BAAhC,iBAEI,uBAAMA,UAAU,kBAAhB,0BAAgDhB,EAAMuB,iBAKhEK,EACF,sBAAKZ,UAAU,cAAf,UACE,sBAAKA,UAAU,OAAf,UACI,uBACEK,GAAIrB,EAAMqB,GACVG,KAAK,WACLK,eAAgB7B,EAAM8B,UACtBL,SAAU,kBAAMzB,EAAM+B,oBAAoB/B,EAAMqB,OAElD,uBAAOL,UAAU,aAAaM,QAAStB,EAAMqB,GAA7C,SACGrB,EAAMuB,UAGX,sBAAKP,UAAU,YAAf,UACE,yBACEQ,KAAK,SACLR,UAAU,MACVW,QAAS,kBAAMxB,GAAW,IAC1BQ,IAAKH,EAJP,kBAMO,sBAAMQ,UAAU,kBAAhB,SAAmChB,EAAMuB,UAEhD,yBACEC,KAAK,SACLR,UAAU,kBACVW,QAAS,kBAAM3B,EAAMgC,WAAWhC,EAAMqB,KAHxC,oBAKS,sBAAML,UAAU,kBAAhB,SAAmChB,EAAMuB,gBAe5D,OATEX,qBAAU,YACHH,GAAcP,GACfI,EAAaO,QAAQoB,QAErBxB,IAAeP,GACfM,EAAcK,QAAQoB,UAEzB,CAACxB,EAAYP,IAEX,oBAAIc,UAAU,OAAd,SAAsBd,EAAYa,EAAkBa,IC/FhD,SAASM,EAAalC,GACjC,OACI,yBACIwB,KAAK,SACLR,UAAU,iBACVmB,eAAcnC,EAAMoC,UACpBT,QAAS,kBAAM3B,EAAMqC,UAAUrC,EAAMuB,OAJzC,UAME,sBAAMP,UAAU,kBAAhB,mBACA,+BAAOhB,EAAMuB,OACb,sBAAMP,UAAU,kBAAhB,uBCVK,SAASsB,EAAKtC,GAAQ,IAAD,EACRC,mBAAS,IADD,mBACzBsB,EADyB,KACnBgB,EADmB,KAgBhC,OACI,uBAAMtB,SAVV,SAAsBC,GAClBA,EAAEC,iBACGI,EAAKiB,SAGVxC,EAAMyC,QAAQlB,GACdgB,EAAQ,MAIR,UACE,oBAAIvB,UAAU,gBAAd,SACE,uBAAOM,QAAQ,iBAAiBN,UAAU,YAA1C,yCAIF,uBACEQ,KAAK,OACLH,GAAG,iBACHL,UAAU,kBACVO,KAAK,OACLmB,aAAa,MACbhC,MAAOa,EACPE,SA3BR,SAAsBP,GAClBqB,EAAQrB,EAAEQ,OAAOhB,UA4Bf,wBAAQc,KAAK,SAASR,UAAU,2BAAhC,oBClBR,IAAM2B,EAAa,CACjBC,IAAK,kBAAM,GACXC,OAAQ,SAAAC,GAAI,OAAKA,EAAKhB,WACtBiB,UAAW,SAAAD,GAAI,OAAIA,EAAKhB,YAGtBkB,EAAeC,OAAOC,KAAKP,GA6FlBQ,MA3Ff,SAAanD,GAAQ,IAAD,EACUC,mBAASD,EAAMoD,OADzB,mBACTA,EADS,KACFC,EADE,OAEYpD,mBAAS,OAFrB,mBAETqD,EAFS,KAEDjB,EAFC,KAIhB,SAASjB,EAASC,EAAIjB,GAClB,IAAMmD,EAAiBH,EAAMI,KAAI,SAAAV,GAC7B,OAAIzB,IAAOyB,EAAKzB,GACL,2BAAIyB,GAAX,IAAiBvB,KAAMnB,IAEpB0C,KAEXO,EAASE,GAGb,SAASxB,EAAoBV,GACzB,IAAMoC,EAAeL,EAAMI,KAAI,SAAAV,GAC3B,OAAIzB,IAAOyB,EAAKzB,GACL,2BAAIyB,GAAX,IAAiBhB,WAAYgB,EAAKhB,YAE/BgB,KAEXO,EAASI,GAGb,SAASzB,EAAWX,GAChB,IAAMqC,EAAiBN,EAAME,QAAO,SAAAR,GAAI,OAAIzB,IAAMyB,EAAKzB,MACvDgC,EAASK,GAGb,IAAMC,EAAWP,EACZE,OAAOX,EAAWW,IAClBE,KAAI,SAAAV,GAAI,OACT,cAAC/C,EAAD,CACAsB,GAAIyB,EAAKzB,GACTE,KAAMuB,EAAKvB,KACXO,UAAWgB,EAAKhB,UAEhBC,oBAAqBA,EACrBC,WAAYA,EACZZ,SAAUA,GAHL0B,EAAKzB,OAORuC,EAAaZ,EAAaQ,KAAI,SAAAjC,GAAI,OACpC,cAACW,EAAD,CAEIX,KAAMA,EACNa,UAAWb,IAAS+B,EACpBjB,UAAWA,GAHNd,MAYHsC,EAA+B,IAAnBF,EAASG,OAAc,QAAU,OAC7CC,EAAW,UAAMJ,EAASG,OAAf,YAAyBD,EAAzB,cAEXG,EAAiBzD,iBAAO,MAExB0D,EA9Ed,SAAqBvD,GACjB,IAAMC,EAAMJ,mBAIZ,OAHAK,qBAAU,WACRD,EAAIE,QAAUH,KAETC,EAAIE,QAyEgBC,CAAYsC,EAAMU,QAQzC,OANAlD,qBAAU,WACFwC,EAAMU,OAASG,KAAoB,GACnCD,EAAenD,QAAQoB,UAE5B,CAACmB,EAAMU,OAAQG,IAGpB,sBAAKjD,UAAU,sBAAf,UACE,2CACA,cAACsB,EAAD,CAAMG,QArBN,SAAiBlB,GACb,IAAM2C,EAAU,CAAE7C,GAAI,QAAU8C,cAAU5C,KAAMA,EAAMO,WAAW,GACjEuB,EAAS,GAAD,mBAAKD,GAAL,CAAYc,QAoBxB,qBAAKlD,UAAU,oCAAf,SACC4C,IAED,oBAAIvC,GAAG,eAAe+C,SAAS,KAAKzD,IAAKqD,EAAzC,SACGD,IAEH,oBACEM,KAAK,OACLrD,UAAU,wCACVsD,kBAAgB,eAHlB,SAKGX,QClGXY,IAASC,OAAO,cAAC,EAAD,CAAKpB,MANR,CACT,CAAE/B,GAAI,SAAUE,KAAM,QAASO,WAAW,GAC1C,CAAET,GAAI,SAAUE,KAAM,aAAcO,WAAW,GAC/C,CAAET,GAAI,SAAUE,KAAM,SAAUO,WAAW,MAGT2C,SAASC,eAAe,W","file":"static/js/main.d23c42aa.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\n\nfunction usePrevious(value) {\n    const ref = useRef();\n    useEffect(() => {\n        ref.current = value;\n    });\n    return ref.current;\n}\n\nexport default function Todo(props) {\n    const [isEditing, setEditing] = useState(false);\n    const [newName, setNewName] = useState('');\n    const editFieldRef = useRef(null);\n    const editButtonRef = useRef(null);\n\n    const wasEditing = usePrevious(isEditing);\n\n    function handleChange(e) {\n        setNewName(e.target.value);\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        props.editTask(props.id, newName);\n        setNewName(\"\");\n        setEditing(false);\n    }\n\n    const editingTemplate = (\n        <form className=\"stack-small\" onSubmit={handleSubmit}>\n            <div className=\"form-group\">\n                <label className=\"todo-label\" htmlFor={props.id}>\n                    New name for {props.name}\n                </label>\n                <input\n                    id={props.id}\n                    className=\"todo-text\"\n                    type=\"text\"\n                    value={newName}\n                    onChange={handleChange}\n                    ref={editFieldRef}\n                />\n            </div>\n            <div className=\"btn-group\">\n                <button type=\"button\" className=\"btn todo-cancel\" onClick={() => setEditing(false)}>\n                    cancel<span className=\"visually-hidden\">renaming {props.name}</span>\n                </button>\n                <button type=\"submit\" className=\"btn btn__primary todo-edit\">\n                    Save\n                    <span className=\"visually-hidden\">new name for {props.name}</span>\n                </button>\n            </div>\n        </form>\n    );\n    const viewTemplate = (\n        <div className=\"stack-small\">\n          <div className=\"c-cb\">\n              <input\n                id={props.id}\n                type=\"checkbox\"\n                defaultChecked={props.completed}\n                onChange={() => props.toggleTaskCompleted(props.id)}\n              />\n              <label className=\"todo-label\" htmlFor={props.id}>\n                {props.name}\n              </label>\n            </div>\n            <div className=\"btn-group\">\n              <button\n                type=\"button\"\n                className=\"btn\"\n                onClick={() => setEditing(true)}\n                ref={editButtonRef}\n              >\n                Edit <span className=\"visually-hidden\">{props.name}</span>\n              </button>\n              <button\n                type=\"button\"\n                className=\"btn btn__danger\"\n                onClick={() => props.deleteTask(props.id)}\n              >\n                Delete <span className=\"visually-hidden\">{props.name}</span>\n              </button>\n            </div>\n        </div>\n      );    \n\n      useEffect(() => {\n        if (!wasEditing && isEditing) {\n            editFieldRef.current.focus();\n        } \n        if (wasEditing && !isEditing) {\n            editButtonRef.current.focus();\n        }\n      }, [wasEditing, isEditing]);\n\n    return <li className=\"todo\">{isEditing ? editingTemplate : viewTemplate}</li>;\n}","import React from \"react\";\n\nexport default function FilterButton(props) {\n    return (\n        <button\n            type=\"button\"\n            className=\"btn toggle-btn\"\n            aria-pressed={props.isPressed}\n            onClick={() => props.setFilter(props.name)}\n        >\n          <span className=\"visually-hidden\">Show </span>\n          <span>{props.name}</span>\n          <span className=\"visually-hidden\"> tasks</span>\n        </button>\n    );\n}","import React, {useState} from \"react\";\n\nexport default function Form(props) {\n    const [name, setName] = useState('');\n\n    function handleChange(e) {\n        setName(e.target.value);\n    }\n    \n    function handleSubmit(e) {\n        e.preventDefault();\n        if (!name.trim()) {\n            return;\n        }\n        props.addTask(name);\n        setName(\"\");\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n          <h2 className=\"label-wrapper\">\n            <label htmlFor=\"new-todo-input\" className=\"label__lg\">\n              What needs to be\u0010done?\n            </label>\n          </h2>\n          <input\n            type=\"text\"\n            id=\"new-todo-input\"\n            className=\"input input__lg\"\n            name=\"text\"\n            autoComplete=\"off\"\n            value={name}\n            onChange={handleChange}\n          />\n          <button type=\"submit\" className=\"btn btn__primary btn__lg\">\n            Add\n          </button>\n        </form>        \n    )\n}","import { nanoid } from \"nanoid\"\nimport React, { useState, useRef, useEffect } from \"react\";\nimport Todo from \"./components/Todo\";\nimport FilterButton from \"./components/FilterButton\";\nimport Form from \"./components/Form\";\n\n//⭕️NOTE: usePrevious() を 2 つのファイルで使用しているので、効率的なリファクタリングは usePrevious() 関数を独自のファイルに移動し、そのファイルからエクスポートし、必要なところにインポートすることです。最後まで行ったら、これを演習としてやってみてください。\n\nfunction usePrevious(value) {\n    const ref = useRef();\n    useEffect(() => {\n      ref.current = value;\n    });\n    return ref.current;\n  }\n\n  const FILTER_MAP = {\n    All: () => true,\n    Active: task => !task.completed,\n    Completed: task => task.completed\n  };\n\nconst FILTER_NAMES = Object.keys(FILTER_MAP);\n\nfunction App(props) {\n    const [tasks, setTasks] = useState(props.tasks);\n    const [filter, setFilter] = useState('All');\n\n    function editTask(id, newName) {\n        const editedTaskList = tasks.map(task => {\n            if (id === task.id) {\n                return {...task, name: newName}\n            }\n            return task;\n        });\n        setTasks(editedTaskList);\n    }\n    \n    function toggleTaskCompleted(id) {\n        const updatedTasks = tasks.map(task => {\n            if (id === task.id) {\n                return {...task, completed: !task.completed} //⭕️この部分「task.completed」を、入力補完で「task.toggleTask.Completed」としてしまっていた。✅入力補完使用中や使用後に、それが正しいかきちんと確認するのが良い習慣となるだろう（今のように正しい答えと見比べたりコピーしたりできない場合には、解決に非常に手間取るかもしれない）\n            }\n            return task;\n        });\n        setTasks(updatedTasks);\n    }\n\n    function deleteTask(id) {\n        const remainingTasks = tasks.filter(task => id !==task.id);\n        setTasks(remainingTasks);\n    }\n    \n    const taskList = tasks\n        .filter(FILTER_MAP[filter])\n        .map(task => (\n        <Todo\n        id={task.id}\n        name={task.name}\n        completed={task.completed}\n        key={task.id}\n        toggleTaskCompleted={toggleTaskCompleted}\n        deleteTask={deleteTask}\n        editTask={editTask}\n        />\n        ));\n\n    const filterList = FILTER_NAMES.map(name => (\n        <FilterButton\n            key={name}\n            name={name}\n            isPressed={name === filter}\n            setFilter={setFilter}\n        />\n    ))\n        \n        function addTask(name) {\n            const newTask = { id: \"todo-\" + nanoid(), name: name, completed: false };\n            setTasks([...tasks, newTask]);\n        }\n\n        const tasksNoun = taskList.length !==1 ? 'tasks' : 'task';\n        const headingText = `${taskList.length} ${tasksNoun} remaining`;\n\n        const listHeadingRef = useRef(null);  //最初よく分からなかった。なぜ適切に、下のh2の参照になるのか。 →ここではただ事前に準備しているというだけで、h2にそのまま入力すれば機能するものだからか（確証はない）\n\n        const prevTaskLength = usePrevious(tasks.length); //⭕️「タスクの長さが変わったら」か\n\n        useEffect(() => {\n            if (tasks.length - prevTaskLength === -1) {\n                listHeadingRef.current.focus();\n            }\n        }, [tasks.length, prevTaskLength]);\n        \n        return (\n      <div className=\"todoapp stack-large\">\n        <h1>TodoMatic</h1>\n        <Form addTask={addTask} />\n        <div className=\"filters btn-group stack-exception\">\n        {filterList}\n        </div>\n        <h2 id=\"list-heading\" tabIndex=\"-1\" ref={listHeadingRef}>\n          {headingText}\n        </h2>\n        <ul\n          role=\"list\"\n          className=\"todo-list stack-large stack-exception\"\n          aria-labelledby=\"list-heading\"\n        >\n          {taskList}\n        </ul>\n      </div>\n    );\n  }\n\nexport default App;\n\nfunction Foo(props) {\n  useEffect(() => {\n    console.log(props.name);\n  }, []); // <-- should error and offer autofix to [props.name]\n}\n","import React from \"react\";\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nconst DATA = [\n    { id: \"todo-0\", name: \"Study\", completed: true },\n    { id: \"todo-1\", name: \"Evangelize\", completed: false },\n    { id: \"todo-2\", name: \"Repeat\", completed: false }\n  ];\n\nReactDOM.render(<App tasks={DATA} />, document.getElementById(\"root\"));"],"sourceRoot":""}